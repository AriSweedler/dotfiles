""""""""""""""""""""""""""""""""" settings """"""""""""""""""""""""""""""""" {{{
filetype plugin on    "allow for autocmds to be run based on filetype
set nocompatible      "Don't do weird stuff for vi

"turn on line numbers in the left columns & make them relative.
set number relativenumber

" briefly show the matching bracket {[( when typing )]}
set showmatch matchtime=3

" allow backspacing over more things
set backspace=indent,eol,start
"""""""""""""""""""""""""""""" Other settings """""""""""""""""""""""""""""" {{{
" CTRL-W in insert mode deletes a lot. Use CTRL-G u to "break the undo
" sequence", so that you can use 'u'  to undo CTRL-W
inoremap <C-W> <C-G>u<C-W>

" timeout on escape codes after 100 ms
set ttimeout ttimeoutlen=100

" Only cancel a partially given command manually (<C-c> or <ESC>).
" Multi-keystroke commands will not timeout.
set notimeout
" Multi-keystroke commands will be shown in bottom right.
set showcmd

" 1st tab:         Complete the longest match and bring up 'wildmenu'
" Additional tabs: Cycle through the menu
set wildmode=longest:full,full
" Nicer tab'ing in command mode
set wildmenu

" Don't update the screen when doing macros. Much faster
set lazyredraw
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
"""""""""""""""""""""""""" Less important settings """"""""""""""""""""""""" {{{
set noerrorbells       " disable error bells
set belloff=all        " disable bell for non-errors, too

set scrolloff=2        " Default to giving me a lil more space to see context
set sidescrolloff=4    " Min # of columns to keep to the left/right of the cursor

set splitbelow         " new splits open to the bottom or to the right
set splitright         " ^

set softtabstop=0      " Use sane defaults for these. Just set tabstop.
set shiftwidth=0       " ^

set display=lastline   " as much as possible of the last line will be displayed
set history=512        " the default is only 50.
set pumheight=8        " set max popup menu height to 8
set tags+=tags;        " ctags is so helpful! And easy, too.
set formatoptions+=j   " Delete comment character when joining commented lines
set nojoinspaces       " don't put 2 spaces after [.!?] when using join command
set signcolumn=yes     " Show signs in the left columns
set whichwrap+=<,>,[,] " Have <Left> and <Right> go across lines
set updatetime=100     " let vim-gitgutter update faster - used by CursorHold autocommand
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
"""""""""""""""""""""""""""""""""" colors """""""""""""""""""""""""""""""""" {{{
" Enable syntax, and set a colorscheme. Don't do this twice
if !exists("colors_name")
  syntax enable       "allow for syntax highlighting and indenting
  colorscheme desert  "pretty colors
endif

" Highlight the lines that folds create when folded
highlight Folded ctermbg=234 ctermfg=8

" Give fun colors to the left columns (and the ColorColumn)
highlight FoldColumn ctermbg=233 ctermfg=8
highlight SignColumn ctermbg=234 ctermfg=8
highlight ColorColumn ctermbg=233

" Toggle syntax highlighting
noremap <Leader>sy :call lib#toggleSyntax()<CR>

" Diff colors
highlight DiffAdd        ctermbg=22
highlight DiffChange     ctermbg=178 cterm=bold
highlight DiffDelete     ctermbg=124 ctermfg=1
highlight DiffText       term=reverse cterm=bold ctermbg=1
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
""""""""""""""""""""""""""" convenience mappings """"""""""""""""""""""""""" {{{
" One keystroke to strip trailing whitespace on the current line and write in
" (almost) any mode
noremap  <C-f> <ESC>:call lib#remove_trailing_whitespace('.')<CR>:w<CR>
noremap! <C-f> <ESC>:call lib#remove_trailing_whitespace('.')<CR>:w<CR>
" Also... exit insert mode without having to move fingers.
inoremap jk <ESC>:call lib#remove_trailing_whitespace('.')<CR>

" <C-f> <C-g> will write and exit. Kinda emacs-y lol
nnoremap <C-g> :q<CR>

" When do I ever wanna hit 2 keys to execute one thought. Overwriting these
" isn't an issue as if I wanna operate on a range I can just use visual mode.
nnoremap D dd
nnoremap G Gzz
nnoremap zz ^zz
nnoremap zZ zz$
nnoremap < <<
nnoremap > >>

" Move up/down this virtual column until you hit non-whitespace
nnoremap gK ?\%<C-R>=virtcol(".")<CR>v\S<CR>
nnoremap gJ /\%<C-R>=virtcol(".")<CR>v\S<CR>

command! DiffThis diffthis | wincmd w | diffthis | wincmd w
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
""""""""""""""""""""""""""""""" Plugin config """""""""""""""""""""""""""""" {{{
""""""""""""""""""""""""""""""""" GitGutter """""""""""""""""""""""""""""""" {{{
" Tell vim-gitgutter to leave the color of my signcolumn alone
let g:gitgutter_override_sign_column_highlight = 0

" White sign, green background
highlight GitGutterAdd term=bold ctermfg=188 ctermbg=22
let g:gitgutter_sign_added = '>+'

" White sign, yellow background
highlight GitGutterChange term=bold ctermfg=188 ctermbg=3
let g:gitgutter_sign_modified = '>~'
let g:gitgutter_sign_modified_removed = '~_'

" Solid red box
highlight GitGutterDelete term=bold ctermfg=188 ctermbg=1
let g:gitgutter_sign_removed_first_line = '>â€¾'
let g:gitgutter_sign_removed = '>_'

" They're changesets more generally than hunks.
nmap [c <Plug>(GitGutterPrevHunk)
nmap ]c <Plug>(GitGutterNextHunk)
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
""""""""""""""""""""""""""""" xterm-color-table """""""""""""""""""""""""""" {{{
" TODO optional arg to call the whatever (Xterm('V')) or something. Defaults
" V for VSPLIT
command! Xterm call VXterm()
command! XTerm call VXterm()
function! VXterm()
  if !exists('g:XtermColorTableDefaultOpen')
    packadd xterm-color-table
  endif
  VXtermColorTable
endfunction
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
""""""""""""""""""""""""""""""""" fugitive """"""""""""""""""""""""""""""""" {{{
nnoremap gb :Git blame<CR>
nnoremap gD :vertical Gdiffsplit dev<CR>
nnoremap gH :vertical Gdiffsplit HEAD^<CR>
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
"""""""""""""""""""""""""""""""""" netrw """"""""""""""""""""""""""""""""" {{{
let g:netrw_browse_split = 3   " open files in new tabs (TODO there is a <Plug> to open something as a background tab. Maybe use that)
let g:netrw_liststyle = 3      " tree style listing
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
""""""""""""""""""""""""""""""""" autoloads """""""""""""""""""""""""""""""" {{{
" scriptease will overwrite the meaning of this command
command! Scriptnames packadd scriptease <Bar> Scriptnames

" The first time we invoke '%', load the matchit plugin. Don't need to try and
" load it every time lol, so unmap it after we do it once.
nnoremap <silent> % :packadd matchit <Bar> unmap %<CR>%
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""" }}}
