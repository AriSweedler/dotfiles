#!/bin/bash

# Make sure none of the files are large
function check-for-big-files() {
  # Init
  BIG=300
  echo "* Check for big files: du \$file > $BIG"

  for file in $(git diff --name-only HEAD); do
    # Exit early - continue the loop if the file doesn't exist
    if [ ! -f "$file" ]; then continue; fi

    # Exit early - continue the loop if the file is not big
    test "$(du "$file" | awk '{print $1}')" -gt "$BIG" || continue

    # Deal with big files
    echo -n "Are you happy with committing $file? It is big. [y/N]? "
    read -n 1 ANSWER
    echo
    if [[ "$ANSWER" =~ [yY] ]]; then
      continue
    else
      echo "This file is $BASH_SOURCE"
      git diff --name-only | du -sh
      exit 1
    fi
  done
}

function has_gtest_filter() {
  git grep "add_test" | grep "gtest_filter"
}

function check-for-gtest_filter() {
  if ! has_gtest_filter; then
    return 0
  fi

  echo
  echo -n "There is a gtest filter line in this commit. Did you intend this? [y/N]? "
  read -n 1 ANSWER
  echo
  if [[ ! "$ANSWER" =~ [yY] ]]; then
    echo "aborting commit"
    exit 1
  fi
  echo "ok, cool :). Make sure you remove it before merging to dev"
}

# Read user input, assign stdin to keyboard
exec < /dev/tty
echo "Pre-commit hook"
check-for-big-files
check-for-gtest_filter
exec <&-

