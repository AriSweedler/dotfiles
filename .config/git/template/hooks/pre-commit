#!/usr/bin/env bash

# Helper - run function on each file
function check_changed() {
  local -r fxn="${1:?}"
  log::info "* Checking: $fxn"
  for file in $(git diff --name-only HEAD); do
    # Exit early - continue the loop if the file doesn't exist
    if [ ! -f "$file" ]; then continue; fi

    # Run the function
    if "$fxn" "$file"; then continue; fi

    # Ask the user how to deal with files that failed the function
    log::warn "File has failed test | file='$file' test='$fxn'"
    echo -n "Do you want to commit file='$file' anyway? [y/N] "
    read -n 1 ANSWER
    echo

    # Happy path
    if [[ "$ANSWER" =~ [yY] ]]; then continue; fi

    # Return a failure - abort the commit
    log::err "You did not say yes - failing the commit"
    log::err "This file is $BASH_SOURCE"
    git diff --name-only | du -sh
    exit 1
  done
}

# A file is large
function big_files() {
  local -r file="${1:?}"
  local BIG=300
  if test "$(du "$file" | awk '{print $1}')" -gt "$BIG"; then
    return 1
  fi
}

# A file has trailing whitespace
function trailing_whitespace() {
  local -r file="${1:?}"
  if grep -q '\s$' "$file"; then
    return 1
  fi
}

function main() {
  if ! source "$HOME/.config/bash-init/log.sh" &>/dev/null; then
    function log::info { echo "[INFO] $@"; }
    function log::err { echo "[ERROR] $@"; }
  fi

  # Preflight check
  if ! git rev-parse HEAD &>/dev/null; then
    log::info "First commit"
    return
  fi

  # Read user input, assign stdin to keyboard
  exec < /dev/tty
  log::info "Pre-commit hook"
  set -- "big_files" "trailing_whitespace"
  for my_check in "$@"; do check_changed "$my_check"; done
  exec <&-
}
main "$@"
