##################################### theme ################################ {{{
# Pretty colors for foreground and background of statusline modes when we're in
# different modes (default, prefix active, select mode, etc.)
fgsm_default=colour16
bgsm_default=colour245
fgsm_active=colour252
bgsm_active=colour92
bgsm_select=colour3
bgsm_zoom=colour30
bgsm_sync=colour53
bgsm_copy=colour22

# Background colors for current and previous windows (in the statusline)
bgs=colour237
fgs=colour230,bold
bgs_highlight=colour25
bgs_highlight_2=colour240
############################################################################ }}}

################################ status line ############################### {{{
# Single variable to set the styling for a given statusline mode.
sm="#{?client_prefix,\
#[fg=${fgsm_active}]#[bg=${bgsm_active}],\
#[fg=${fgsm_default}]#[bg=${bgsm_default}]}"

# And another variable that allows me to
statusline_keys_off="#{?#{==:#(tmux show-option -qv key-table),OFF_keytable},#[bg=colour88] OFF ,}"
################################### left ################################### {{{
# Customize status line message and style. Google `man tmux "FORMATS"`
# (http://man7.org/linux/man-pages/man1/tmux.1.html#FORMATS)
# There are style directives `#[]`
# and there ternary statements: `#(?boolean,option1,option2}`
set-option -g status-left-length 40
set-option -g status-left "\
${sm}\
 Session: #S \
#{?pane_synchronized,#[bg=${bgsm_sync}] (S) ,}\
#{?window_zoomed_flag,#[bg=${bgsm_zoom}] (Z) ,}\
#{?#{==:#{pane_mode},"copy-mode"},#[bg=${bgsm_copy}] COPY ,}\
#{?selection_present,#[bg=${bgsm_select}] SELECTION ,}\
$statusline_keys_off\
"
############################################################################ }}}
################################## center ################################## {{{
# Put the window list in the center
set-option -g status-justify centre

# Set the style for windows in the window list
set-option -g window-status-format '#{?client_prefix,#[underscore],} #I: #W '
set-option -g window-status-current-format '#{?client_prefix,#[underscore],} #I: #W :) '

# highlight the active and last windows
set-option -g status-style fg=${fgs},bg=${bgs}
set-option -g window-status-current-style bg=${bgs_highlight}
set-option -g window-status-last-style bg=${bgs_highlight_2}
############################################################################ }}}
################################### right ################################## {{{
# The syntax for nested if statements is whacky! This looks okay, though. I'm
# pretending its an "if-elseif-else" block. We use this early-exiting if-elif
# check to choose a color {{{
set-option -g status-right-length 60
set-option -g status-right "\
${sm}\
$statusline_keys_off\
#{?window_zoomed_flag,#[bg=${bgsm_zoom}] (Z) ,}\
#{?pane_synchronized,#[bg=${bgsm_sync}] (S) ,}\
#{?selection_present,#[bg=${bgsm_select}],\
#{?pane_in_mode,#[bg=${bgsm_copy}],\
#{?client_prefix,#[bg=${bgsm_active}],\
#[bg=${bgsm_default}]}}} \
%a %b %d on #h at %I:%M%p\
"
############################################################################ }}}
############################################################################ }}}
